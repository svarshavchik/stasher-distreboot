<!--

Copyright 2012 Double Precision, Inc.
See COPYING for distribution information.

-->

<class name="distrebootObj">
  <method name="instance">
    <comment>
      //! A command from another invocation sent to the singleton instance.
    </comment>

    <param>
      <comment>
	//! The other invocation's uid
      </comment>

      <decl>uid_t uid</decl>
    </param>

    <param>
      <comment>
	//! The invocation's arguments.
      </comment>

      <decl>const args &amp;command</decl>
    </param>

    <param>
      <comment>
	//! The return value to the original invocation
      </comment>

      <decl>const ret &amp;retArg</decl>
    </param>

    <param>
      <comment>
	//! Invoke flag->processed() to indicate that the request was processed
      </comment>

      <decl>const x::singletonapp::processed &amp;flag</decl>
    </param>

    <param>
      <comment>
	//! Request mcguffin

	//! When this object goes out of scope and gets destroyed, the
	//! "ret" and "flag" gets sent back to the original invocation.
      </comment>

      <decl>const x::ref&lt;x::obj&gt; &amp;mcguffin</decl>
    </param>
  </method>

  <method name="connection_update">
    <comment>//! Managed server status callback update</comment>

    <param>
      <comment>
	//! Current status of the connection with the server
      </comment>

      <decl>stasher::req_stat_t status</decl>
    </param>
  </method>

  <method name="serverstate">
    <comment>//! Managed server status callback update</comment>

    <param>
      <comment>
	//! Current status of the connection with the server
      </comment>

      <decl>const stasher::clusterstate &amp;state</decl>
    </param>
  </method>

  <method name="serverinfo">
    <comment>//! Managed server status callback</comment>

    <param type="class">
      <comment>
	//! Server connection nifo
      </comment>

      <decl>const stasher::userhelo &amp;serverinfo</decl>
    </param>
  </method>

  <method name="update_heartbeat_request">
    <comment>//! Update my node's heartbeat</comment>

    <param>
      <comment>//! Heartbeat update type</comment>

      <decl>stasher::heartbeat&lt;std::string, void&gt;::base::update_type_t
      update_type</decl>
    </param>
  </method>

  <method name="rebootlist_updated">
    <comment>//! The rebootlist object was updated in the repository</comment>

  </method>

  <method name="again_just_rebooted">
    <comment>//! Removal of me from the rebootlist collided, try again</comment>

  </method>

</class>
